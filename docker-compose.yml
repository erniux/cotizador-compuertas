services:
  db:
    image: postgres:16
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    command: redis-server --appendonly yes
    volumes:
      - redisdata:/data

  backend:
    build: ./backend
    env_file:
      - ./.env
      - ./backend/.env.example
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app  # hot-reload del código

  frontend-dev:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm ci && npm run dev -- --host 0.0.0.0 --port 5173"
    environment:
      - VITE_API_BASE=${VITE_API_BASE}
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    depends_on:
      - backend

  # Para builds estáticos (entrega)
  frontend:
    build: ./frontend
    depends_on:
      - backend
    ports:
      - "8080:80"
    deploy:
      replicas: 0  # desactivado por defecto en dev (usamos frontend-dev)

volumes:
  pgdata:
  redisdata:
